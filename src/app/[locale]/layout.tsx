/* Libraries imports */
import type { Metadata } from "next";
import { notFound } from 'next/navigation';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { getMessages } from "next-intl/server";
import { routing } from '@/i18n/routing';
import { Provider } from "@/components/ui/provider";
import "./globals.css";

/* Page metadata configuration */
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/* Root layout component with internationalization support */
export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}>) {
  /* Extract and validate locale parameter */
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  /* Load internationalization messages */
  const messages = await getMessages();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body>
        {/* Internationalization provider with locale context */}
        <NextIntlClientProvider
          locale={locale}
          messages={messages}
          timeZone="UTC"
        >
          {/* UI theme and component provider */}
          <Provider>
            {children}
          </Provider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
